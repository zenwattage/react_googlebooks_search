{"version":3,"sources":["components/Nav/index.js","components/SearchInput/index.js","components/Grid/index.js","components/SavedBooks/index.js","components/Jumbotron/index.js","pages/NoResults.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","className","href","id","type","SearchInput","props","value","search","name","placeholder","onChange","handleInputChange","onClick","handleFormSubmit","Container","fluid","children","Row","Col","size","split","map","join","SavedResult","savedBooks","length","savedbook","title","key","_id","src","image","alt","authors","description","handleDeleteButton","link","target","rel","Jumbotron","NoResults","App","exact","path","component","SavedBooks","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.186b3d60.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-primary bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                <h2 className=\"text-white\">Search for a book!</h2>\r\n            </a>\r\n            <div id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\" id=\"home\">\r\n                        <a className=\"nav-link\" href=\"/\"><button type=\"button\" className=\"btn btn-info text-white\">Search for Books</button></a>\r\n                    </li>\r\n                    <li className=\"nav-item\" id=\"report\">\r\n                        <a className=\"nav-link\" href=\"/saved\"><button type=\"button\" className=\"btn btn-warning text-white\">Save a Book</button></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst SearchInput = props => {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"GoogleBookSearchLabel\"><p>Search for a book</p></label>\r\n                <br>\r\n                </br>\r\n\r\n                <input className=\"col-14 form-control\"\r\n                    value={props.search}\r\n                    type=\"text\"\r\n                    name=\"bookSearch\"\r\n                    placeholder=\"Type your book's Title\"\r\n                    onChange={props.handleInputChange}\r\n                />\r\n            </div>\r\n            <button type=\"submit\" className=\"submitBtn btn btn-primary\" onClick={props.handleFormSubmit}>\r\n                Submit\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchInput;","import React from \"react\";\r\n// thanks to duncandam86 for this grid use example\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n    return (\r\n        <div\r\n            className={size\r\n                .split(\" \")\r\n                .map(size => \"col-\" + size)\r\n                .join(\" \")}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./style.css\"\r\nimport { Row, Col } from \"../Grid\"\r\n\r\nconst SavedResult = props => {\r\n    return (props.savedBooks.length === 0) ? (\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Books that You Saved</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ):(\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Books that You Saved</h3>\r\n                    {props.savedBooks.map(savedbook => {\r\n                        return (\r\n                            <li className=\"saved-list list-group-item\">\r\n                                <Row className=\"SearchResult\" id={savedbook.title + \"Card\"} key={savedbook._id}>\r\n                                    {/* col-3 show image of the book */}\r\n                                    <Col size=\"2\" className=\"bookImage\">\r\n                                        <img src={savedbook.image} alt={savedbook.title} />\r\n                                    </Col>\r\n                                    <Col size=\"1\" className=\"emptyCol\"/>\r\n                                    {/* col-9 show information of the book */}\r\n                                    <Col size=\"9\" className=\"bookInfo\">\r\n                                        <Row>\r\n                                            <h2 className=\"bookTitle\">{savedbook.title}</h2>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <h3 className=\"bookAuthor\">{savedbook.authors}</h3>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <p className=\"bookDescription\">{savedbook.description}</p>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <br></br>\r\n                                <Row className=\"buttonDiv \">\r\n                                    <button className=\"deleteBook btn btn-danger\" id={savedbook._id} onClick={() => props.handleDeleteButton(savedbook._id)}>\r\n                                        Delete Book\r\n                                    </button>\r\n                                    <a href={savedbook.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <button className=\"viewBook btn btn-success\">\r\n                                            View Book\r\n                                        </button>\r\n                                    </a>\r\n                                </Row>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SavedResult","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron({ children }) {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid d-flex align-items-center\">\r\n            <div className=\"container text-center\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoResults() {\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col size=\"md-12\">\r\n                    <Jumbotron>\r\n                        <h1>404 Page Not Found</h1>\r\n                    </Jumbotron>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NoResults;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport SearchInput from \"./components/SearchInput\";\nimport SavedBooks from \"./components/SavedBooks\";\nimport NoResults from \"./pages/NoResults\";\nimport './App.css';\n\nfunction App() {\n  return (\n    //router\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={ SearchInput } />\n          <Route exact path=\"/saved\" component={ SavedBooks } />\n          <Route exact path=\"/saved/:id\" component={ SavedBooks } />          \n          <Route component={ NoResults } />\n        </Switch>\n      </div>\n    </Router>\n    //exact paths\n    // saved\n    // saved/:id \n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}